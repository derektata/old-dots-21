#  _____      ____ _ _   _ 
# / __\ \ /\ / / _` | | | |
# \__ \\ V  V / (_| | |_| |
# |___/ \_/\_/ \__,_|\__, |
#                    |___/ 

## Autostart
    exec dbus-update-activation-environment --systemd --all
    exec bluetoof
    exec gamma
    exec mako

### Variables
# Logo key. Use Mod1 for Alt.
    set $mod Mod4

# Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show drun --prompt="" --allow-images | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/.local/share/backgrounds/spacesurf.png fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output eDP-1 resolution --custom 1920x1080

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:touchpad {
  tap enabled
    natural_scroll enabled
}
input * xkb_numlock enable
input * repeat_delay 300
input * repeat_rate 30

#
# Borders, Gaps, and Fonts
default_border pixel 2
default_floating_border pixel 1
gaps inner 10
gaps outer 5
smart_gaps off
font pango: FiraCode Nerd Font Regular 11

# Window Border Color
client.focused #353439 #ebdbb2 #353439 #ebdbb2

# Reset Gaps to Default Setting
bindsym $mod+0 gaps inner current set 10
bindsym $mod+Shift+0 gaps outer current set 5

# Change Inner Gap Size
bindsym $mod+minus gaps inner current minus 5
bindsym $mod+equal gaps inner current plus 5

# Change Outer Gap Size
bindsym $mod+Shift+minus gaps outer current minus 5
bindsym $mod+Shift+equal gaps outer current plus 5

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Open file manager
bindsym $mod+Shift+f exec nautilus

# Volume Controls
bindsym XF86AudioRaiseVolume exec pulsemixer --change-volume +5
bindsym XF86AudioLowerVolume exec pulsemixer --change-volume -5
bindsym XF86AudioMute exec pulsemixer --toggle-mute

# Media Controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Take a screenshot
bindsym Print exec grim

# Take a screenshot of a selection
bindsym $mod+Print exec grim -g "$(slurp)"

# Screen color picker
bindsym $mod+c exec color-picker

# Emoji Picker
bindsym Alt+e exec rofimoji &

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec pwrmenu 

# Lock the screen
bindsym $mod+Escape exec screenlock
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
# bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
# bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+period move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+period scratchpad show
#
# Resizing containers:
#

mode "resize" {
# These bindings trigger as soon as you enter the resize mode
# Pressing right will shrink the window’s width.
# Pressing left will grow the window’s width.
# Pressing down will shrink the window’s height.
# Pressing up will grow the window’s height.
  bindsym $right resize shrink width 25 px or 25 ppt
    bindsym $up resize grow height 25 px or 25 ppt
    bindsym $down resize shrink height 25 px or 25 ppt
    bindsym $left resize grow width 25 px or 25 ppt

# back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#
# Window Rules:
for_window [title="Open Folder"] floating enable
for_window [title="Open Folder"] resize set 900 500
for_window [title="Save File"] floating enable
for_window [title="Save File"] resize set 900 500

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

## Waybar
## Config files for this status bar:
## ~/.config/waybar/config
## ~/.config/waybar/style.css

bar {
  swaybar_command waybar
}

include /etc/sway/config.d/*
